% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semLatent.R
\name{SEMext}
\alias{SEMext}
\title{Network extension through covariance analysis}
\usage{
SEMext(fit, data, gnet, d, B = NULL, perm = 0, alpha = 0.05,
  verbose = FALSE, ...)
}
\arguments{
\item{fit}{A fitted SEM object of class \code{\link{lavaan}} produced 
by \code{\link[SEMgraph]{SEMbap}}.}

\item{data}{A matrix with rows corresponding to subjects, and columns 
to graph nodes.}

\item{gnet}{External interaction network as an igraph object. Interaction 
data from this network will be used to integrate additional interaction 
information inside the model. Two preset databases are available: 
(i) kegg, for KEGG signaling pathways (directed), and (ii) string, 
for STRING protein interactions (undirected). Note that, if the input 
graph is undirected, an undirected reference interactome is expected. 
In case a directed interactome is used with an undirected input, a 
directed output network will be enforced.}

\item{B}{Node-node interaction fixed weight. If B is NULL (default), 
beta coefficients will be estimated by MLE. If B is numeric, it will 
be used as a scaling factor for the edge weights in the graph object 
(graph attribute E(graph)$weight). Since SEMgraph scales data before 
model fitting, we suggest a grid search for the optimal B value in the 
interval [0, 0.3]. As a rule of thumb, to our experience, B = 0.1 
performs well on any network.}

\item{perm}{Number of permutations. By default, perm is set to 0 and 
conventional standard errors will be computed. If perm > 1, P-values 
will be computed from a moment-based chi-squared approximation derived 
from the empirical distribution of permuted data (Larson and Owen, 2015). 
To reduce computational time costs per permutation, we suggest perm = 500 
(this will leave P-values precision almost unaltered). If perm = 1, 
no P-values are calculated.}

\item{alpha}{Significance level used for GGM search of common regressors 
and common response variables. By default, alpha is set to 0.05. 
As a general rule, to limit the number of added nodes with large networks, 
we suggest to set alpha as 1/df, where the degrees of freedom 
df = vcount(graph)*(vcount(graph)-1)/2 - ecount(graph). This will limit 
the number of new nodes proportionally to the graph sparsity.}

\item{verbose}{A logical value. If FALSE (default), the processed graphs 
will not be plotted to screen, saving execution time (they will be 
returned anyway).}

\item{...}{arguments to be passed to or from other methods.}
}
\value{
A list of 5 objects:
\enumerate{
\item "fit", SEM fitted lavaan object;
\item "gest", group effect estimates and P-values on graph nodes;
\item "model", SEM model as a string;
\item "graph", list of four igraph objects, contianing:
\itemize{
\item "duv", the extended directed (or bidirected) network with new 
nodes from the external interactome,
\item "gUX", extended source network with unmeasured variables,
\item "gUY", extended target network with unmeasured variables,
\item "Ug", union of duv, gUX, and gUY graphs;
}
\item "dataXY", input data subset mapping graph nodes, plus group at 
the first column (if no group is specified, this column will take NA 
values).
}
}
\description{
SEMextend extends an input network using significant 
residual covariances (derived from \code{\link[SEMgraph]{SEMbap}}) 
between three types of nodes: (i) connectors, being nodes with in- and 
out-degree greater than 0, (ii) sources, with in-degree = 0, and 
(iii) targets, with out-degree = 0. Network extension is performed in 
three ways: (i) new external nodes connecting pairs of nodes with 
significant residual covariances; (ii) new external parent nodes 
connecting source nodes; (iii) new external child nodes connecting 
target nodes. Parent and child nodes are found using de-sparsified 
graphical lasso method (D-S_GL), from \code{\link[SILGGM]{SILGGM}} 
function. Added nodes (connectors, regressors, and response variables) 
can already be present in the input graph. The extended output network 
will be fitted using \code{\link[SEMgraph]{SEMfit}}.
}
\examples{
# Specifying data groups
group <- c(rep(0, 17), rep(1, 15))
# Return graph properties, take the largest component, and convert 
# grapNEL to igraph
graph <- properties(kegg.pathways$hsa04540_Gap_junction)[[1]]
# Transpose data matrix: 32 subjectx (rows) x 19726 genes (columns)
data <- t(FTLDu_GSE13162)

# Network fitting
fit <- SEMfit(graph, data, group, B = NULL, perm = 10000)
# Network degrees of freedom
ndf <- vcount(graph)*(vcount(graph) - 1)/2 - ecount(graph)

# Bow-free interaction search through GGMs
ggm <- SEMggm(fit = fit, gnet = kegg, d = 2, perm = 10000,
              alpha = 1/ndf,
              verbose = FALSE)

# Network extension
ext <- SEMext(fit = ggm, gnet = kegg, data = data, B = NULL, d = 2,
              perm = 10000,
              alpha = 1/ndf,
              verbose = TRUE)

# Results summary
summary(ext$gest)
pval <- ext$gest@res$pchisq[-c(1:3)]
length(which(p.adjust(pval, method = "BH") < 0.1))

# Plot output graphs
par(mfrow = c(2, 2), mar = c(1, 1, 1, 1))
W <- ext$graph$guv; E(W)$weight <- 1       # connectors
X <- ext$graph$gux                         # sources
Y <- ext$graph$guy                         # targets
# U = input network + C + X + Y            # union
U <- ext$graph$Ug; E(U)$weight <- 1
plot(W, main = "Extended connector network")
plot(X, main = "Extended source network")
plot(Y, main = "Extended target network")
plot(U, main = "Extended input network")

# SEM fitting of the extracted graphs (guv, gux, guy)
sem.w <- SEMfit(graph = W, data = data, group = group, B = NULL, perm = 0)
summary(sem.w$fit)
sem.x <- SEMfit(graph = X, data = data, group = group, B = NULL, perm = 0)
summary(sem.x$fit)
sem.y <- SEMfit(graph = Y, data = data, group = group, B = NULL, perm = 0)
summary(sem.y$fit)

}
\references{
Grassi M & Palluzzi F (in preparation). SEMgraph: An R Package for 
Pathway and Network Analysis of Genomics Data with Structural Equation 
Models (SEM). Journal of Statistical Software (xxxx) 

Zhang R, Ren Z, Chen W (2018). SILGGM: An extensive R package for 
efficient statistical inference in large-scale gene networks. 
PLoS Comput. Biol., 14(8): e1006369. 
https://doi.org/10.1371/journal.pcbi.1006369
}
\seealso{
\code{\link{igraph}}, \code{\link[lavaan]{lavaan}}, 
\code{\link{SILGGM}}
}
