% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semLatent.R
\name{diagonalizePsi}
\alias{diagonalizePsi}
\title{Remove nuisance covariances (psi) from the observed data matrix}
\usage{
diagonalizePsi(
  graph,
  data,
  algo = "d-sep",
  method = "BH",
  alpha = 0.05,
  showGraphs = FALSE,
  GUU = FALSE,
  ...
)
}
\arguments{
\item{graph}{An igraph object.}

\item{data}{A matrix whith rows corresponding to subjects, and
columns to graph nodes (variables).}

\item{algo}{Data adjustment method. The default correction method 
is "d-sep" (Shipley's d-separation test), only feasible for DAGs. In 
case of non-DAGs, the method is automatically changed to "ggm" 
(Gaussian Graphical Modeling). The "ggm" method can also be manually 
enabled for fast computation.}

\item{method}{Multiple testing correction method. One of the values 
available in \code{\link[stats]{p.adjust}}. By default, method is set 
to "BH" (i.e., FDR correction).}

\item{alpha}{Significance level for covariance selection 
(by default, alpha = 0.05).}

\item{showGraphs}{If TRUE, it shows intermediate graphs during the 
execution (not recommended for large graphs).}

\item{...}{Currently ignored.}
}
\value{
The adjusted data matrix.
}
\description{
Adjust the data matrix by iteratively removing possible 
latent sources of confounding, encoded in the estimated covariance 
matrix (psi).
}
\details{
The covariance matrix provides information about which 
part of a DAG or a directed graph is not supported by the observed data. 
This function captures the topology of missing edges in a DAG or a directed 
graph by learning and fitting the covariance matrix with constrained 
null elements, corresponding to non significant edges and input directed 
graph edges, and adjusts the data matrix by removing the latent triggers 
responsible for nuisance edges.
}
\examples{

# Data adjustment
adjdata <- diagonalizePsi(graph = sachs$graph, data = log(sachs$pkc),
                          method = "BH", alpha = 0.2)

# Fitting without adjustment
sem0 <- SEMrun(graph = sachs$graph, data = log(sachs$pkc),
               group = sachs$group,
               fit = 1)

# Fitting with adjustment
sem1 <- SEMrun(graph = sachs$graph, data = adjdata,
               group = sachs$group,
               fit = 1)

# Scatter matrix of non-adjusted data vs. adjusted data
pairwiseMatrix(adjdata, log(sachs$pkc), size = 1000)

}
\references{
Grassi M, Palluzzi F (2021). SEMgraph: An R Package for Causal Network 
Analysis of High-Throughput Data with Structural Equation Models. 
xxxxx x(x): xxxxx. https://doi.org/xxxxx
}
\seealso{
\code{\link[GGMncv]{inference}}, \code{\link[GGMncv]{constrained}}
}
