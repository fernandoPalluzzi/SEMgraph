% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semUtils.R
\name{mergeGraph}
\alias{mergeGraph}
\title{Network merging utility}
\usage{
mergeGraph(g = list(), gref = NULL, gnet = NULL, verbose = FALSE,
  ...)
}
\arguments{
\item{g}{List of igraph objects to be merged.}

\item{gref}{Reference input graph, used to define color code: 
"yellow", common nodes between merged and reference graphs; 
"lightblue", nodes in the merged graph that are absent in reference one. 
If gref = NULL (default), no nodes colour will be added.}

\item{gnet}{External directed interaction network as an igraph object. 
When a directed interactome is provided, missing edge directions will 
be recovered from it, and a directed output network will be enforced. 
If gnet = NULL (default), a merged undirected network will be produced.}

\item{verbose}{A logical value. If FALSE (default), the output merged 
graph will not be plotted to screen.}

\item{...}{arguments to be passed to or from other methods.}
}
\value{
A merged network as an igraph object.
}
\description{
Merge a list of directed and/or undirected networks into one.
}
\examples{
# Data loading
group <- c(rep(0, 17), rep(1, 15))
graph <- properties(kegg.pathways$hsa04540_Gap_junction)[[1]]
data <- t(FTLDu_GSE13162)

# Generating graphs
fit <- SEMfit(graph, data, group, B = NULL, perm = 10000)
ndf <- vcount(graph)*(vcount(graph) - 1)/2 - ecount(graph)
ggm <- SEMggm(fit = fit, gnet = kegg, d = 2, perm = 10000, alpha = 1/ndf)

# Defining graph variables
ig <- ggm$graph$ig        # directed graph
guu <- ggm$graph$guu      # undirected graph

# Merging without external directed intractome
UG <- mergeGraph(g = list(ig, guu))
gplot(UG)

# Recover edge directions from external intractome
DG <- mergeGraph(g = list(ig, guu), gnet = kegg)
gplot(DG)

}
\seealso{
\code{\link{igraph}}
}
