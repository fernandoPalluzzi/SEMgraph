% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semPaths.R
\name{reduceGraph}
\alias{reduceGraph}
\title{Shortest path and tree-based network reduction methods}
\usage{
reduceGraph(graph, type, seed = "none", eweight = "none", ...)
}
\arguments{
\item{graph}{An igraph object.}

\item{type}{Network reduction method. If subgraph = "mst", the input 
network will be reduced to a MST, using the \code{\link[igraph]{mst}} 
igraph implementation. This will produce a tree with the same node as 
the input graph (N), and N-1 edges, such that the sum of edges is the 
minimum among all the possible subgraphs. If subgraph = "core", an 
induced subgraph of the input seed set will be generated (see 
\code{\link[SEMgraph]{seedweight}} for seed list creation). 
If subgraph = "kou", the fast Steiner tree algorithm from Kou et al. (1981) 
will be applied starting from a set of seed nodes. If subgraph = "usp", 
the resulting network will be the union of the shortest paths. 
If subgraph = "isn" a subnetwork will be induced from the shortest 
path nodes.}

\item{seed}{A vector containing seed node identifiers, either user-defined 
or yielded by \code{\link[SEMgraph]{seedweight}}.}

\item{eweight}{Edge weight type derived from 
\code{\link[SEMgraph]{edgeweight.cfa}}, 
\code{\link[SEMgraph]{edgeweight.r2z}}, 
\code{\link[SEMgraph]{edgeweight.sem}}, 
or from user-defined distances. This option determines the 
weight-to-distance transform used to reduce the input graph. If set to 
"none" (default), edge weights will be set to 1. If eweight = "kegg", 
repressing interactions (-1) will be set to 1 (maximum distance), 
neutral interactions (0) will be set to 0.5, and activating 
interactions (+1) will be set to 0 (minimum distance). 
If eweight = "zsign", all significant interactions will be set to 0 
(minimum distance), while non-significant ones will be set to 1. 
If eweight = "pvalue", weights (p-values) will be transformed to the 
inverse of negative base-10 logarithm. If eweight = "custom", the 
algorithm will use the distance measure specified by the user as "weight" 
edge attribute.}

\item{...}{arguments to be passed to or from other methods.}
}
\value{
A reduced graph of class \code{\link{igraph}}.
}
\description{
Uses different shortest path and tree-based strategies 
for reducing a network to an optimal subset of nodes and edges.
}
\examples{
# Data loading
group <- c(rep(0, 17), rep(1, 15))
graph <- properties(kegg.pathways$hsa04540_Gap_junction)[[1]]
data <- t(FTLDu_GSE13162)

# Graph weighting
graph1 <- edgeweight.sem(graph = graph, data = data, group = group)

# Graph reduction
G1 <- reduceGraph(graph = graph1, type = "mst", seed = "none",
                  eweight = "pvalue")
gplot(G1)

}
