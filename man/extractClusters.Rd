% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semLearn.R
\name{extractClusters}
\alias{extractClusters}
\title{Cluster extraction and fitting}
\usage{
extractClusters(
  graph,
  data,
  membership,
  group = NULL,
  fitting.method = "lavaan",
  se = "standard",
  limit = 100,
  n = 2000,
  size = 5,
  ...
)
}
\arguments{
\item{graph}{Input network as an igraph object.}

\item{data}{A matrix or data.frame. Rows correspond to subjects, and
columns to graph nodes (variables).}

\item{membership}{A vector of cluster membership IDs. The membership 
vector can be generated using the \code{\link[SEMgraph]{clusterScore}}, 
\code{\link[SEMgraph]{clusterGraph}}, or 
\code{\link[SEMgraph]{model.learn}} functions.}

\item{group}{A binary vector. This vector must be as long as the
number of subjects. Each vector element must be 1 for cases and 0
for control subjects. If not NULL, edges will be weighted accounting
for the correlation difference between cases (1) and controls (0). 
By default, \code{group = NULL}.}

\item{fitting.method}{MLE method used for SEM fitting. 
If \code{fitting.method = "lavaan"} (default), the SEM will be fitted 
using the NLMINB solver from lavaan R package, with standard errors 
derived from the expected Fisher information matrix. 
If \code{fitting.method = "ricf"}, the model is fitted via residual 
iterative conditional fitting (RICF; Drton et al. 2009). 
If \code{fitting.method = "cggm"}, model fitting is based on 
constrained Gaussian Graphical Modeling (CGGM; Hastie et al. 2009, p. 446).}

\item{se}{If "standard" (default), with \code{fitting.method = "lavaan"}, 
conventional standard errors are computed based on inverting the 
observed information matrix. If "none", no standard errors are computed.}

\item{limit}{An integer value corresponding to the network size 
(i.e., number of nodes). Beyond this limit, the execution under
\code{fitting.method = "lavaan"} will run with \code{SE = "none"}, 
if \code{fit = 0}; it will be ridirected to 
\code{fitting.method = "ricf"}, if \code{fit = 1}; or to 
\code{fitting.method = "cggm"}, if \code{fit = 2}.
This redirection is necessary to reduce the computational demand of 
standard error estimation by lavaan. Increasing this number will 
enforce lavaan execution when \code{fitting.method = "lavaan"}.}

\item{n}{Number of randomization replicates (default = 2000), for 
permutation flip or boostrap sampling, if \code{fitting.method = "ricf"}.}

\item{size}{Minimum size for a cluster to be fitted (default = 5). 
Use \code{size = 0} to enforce model fitting for every cluster.}

\item{...}{Currently ignored.}
}
\value{
A list of three objects:
\enumerate{
\item "clusters", A list of clusters as igraph objects;
\item "estimates", A data.frame containing model estimates for each cluster;
\item "fit.indices", A data.frame containing fitting indices for each cluster.
}
}
\description{
Extract and fit clusters from an input graph.
}
\examples{

\donttest{

library(huge)
als.npn <- huge.npn(alsData$exprs)

# Cluster creation
clusters <- clusterScore(graph = alsData$graph, data = als.npn,
                         group = alsData$group,
                         type = "wtc")

# Clusters extraction and fitting with the RICF algorithm
fit <- extractClusters(graph = alsData$graph, data = als.npn,
                       membership = clusters$membership,
                       group = alsData$group,
                       fitting.method = "ricf")

# Extracting differentially regulated nodes
DRNs <- rownames(fit$estimates)[fit$estimates$pvalue < 0.05]
length(DRNs)

# Map cluster 1 on the input graph
g <- alsData$graph
c <- fit$clusters[[1]]
V(g)$color <- ifelse(V(g)$name \%in\% V(c)$name, "gold", "white")
gplot(g)

}

}
\references{
Yves Rosseel (2012). lavaan: An R Package for Structural Equation
Modeling. Journal of Statistical Software, 48(2): 1-36.
<https://www.jstatsoft.org/v48/i02/>

Drton M, Eichler M, Richardson TS (2009). Computing Maximum Likelihood
Estimated in Recursive Linear Models with Correlated Errors.
Journal of Machine Learning Research, 10(Oct): 2329-2348.
<https://www.jmlr.org/papers/volume10/drton09a/drton09a.pdf>

Jankova J, van de Geer S (2015). Confidence intervals for high-dimensional
inverse covariance estimation. Electronic Journal of Statistics,
9(1): 1205-1229. <https://doi.org/10.1214/15-EJS1031>

Hastie T, Tibshirani R, Friedman J. (2009). The Elements of Statistical
Learning (2nd ed.). Springer Verlag: New York. ISBN: 978-0-387-84858-7

Grassi M, Palluzzi F, Tarantino B (2022). SEMgraph: An R Package for Causal Network
Analysis of High-Throughput Data with Structural Equation Models.
Bioinformatics, 38 (20), 4829â€“4830 <https://doi.org/10.1093/bioinformatics/btac567>

Fortunato S, Hric D. Community detection in networks: A user guide (2016).
Phys Rep; 659: 1-44. <https://dx.doi.org/10.1016/j.physrep.2016.09.002>

Yu M, Hillebrand A, Tewarie P, Meier J, van Dijk B, Van Mieghem P,
Stam CJ (2015). Hierarchical clustering in minimum spanning trees.
Chaos 25(2): 023107. <https://doi.org/10.1063/1.4908014>
}
\seealso{
See \code{\link[SEMgraph]{clusterScore}} and 
\code{\link[SEMgraph]{clusterGraph}} for network clustering.
See \code{\link[SEMgraph]{model.learn}} for data-driven model learning and 
clustering.
See \code{\link[SEMgraph]{SEMrun}} for general model fitting.
}
\author{
Fernando Palluzzi \email{fernando.palluzzi@gmail.com}
}
